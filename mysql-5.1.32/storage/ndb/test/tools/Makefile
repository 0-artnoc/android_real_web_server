# Makefile.in generated by automake 1.10.2 from Makefile.am.
# storage/ndb/test/tools/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2004-2005 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Copyright (C) 2004, 2006 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Copyright (C) 2004, 2006 MySQL AB
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


pkgdatadir = $(datadir)/mysql
pkglibdir = $(libdir)/mysql
pkgincludedir = $(includedir)/mysql
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = arm-unknown-none
target_triplet = arm-unknown-none
ndbtest_PROGRAMS = hugoLoad$(EXEEXT) hugoFill$(EXEEXT) \
	hugoLockRecords$(EXEEXT) hugoPkDelete$(EXEEXT) \
	hugoPkRead$(EXEEXT) hugoPkReadRecord$(EXEEXT) \
	hugoPkUpdate$(EXEEXT) hugoScanRead$(EXEEXT) \
	hugoScanUpdate$(EXEEXT) restart$(EXEEXT) verify_index$(EXEEXT) \
	copy_tab$(EXEEXT) create_index$(EXEEXT) ndb_cpcc$(EXEEXT) \
	listen_event$(EXEEXT) eventlog$(EXEEXT) rep_latency$(EXEEXT) \
	ndb_connect$(EXEEXT)
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/storage/ndb/config/common.mk.am \
	$(top_srcdir)/storage/ndb/config/type_ndbapitest.mk.am
subdir = storage/ndb/test/tools
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac-macros/alloca.m4 \
	$(top_srcdir)/config/ac-macros/check_cpu.m4 \
	$(top_srcdir)/config/ac-macros/character_sets.m4 \
	$(top_srcdir)/config/ac-macros/compiler_flag.m4 \
	$(top_srcdir)/config/ac-macros/plugins.m4 \
	$(top_srcdir)/config/ac-macros/ha_ndbcluster.m4 \
	$(top_srcdir)/config/ac-macros/large_file.m4 \
	$(top_srcdir)/config/ac-macros/misc.m4 \
	$(top_srcdir)/config/ac-macros/readline.m4 \
	$(top_srcdir)/config/ac-macros/ssl.m4 \
	$(top_srcdir)/config/ac-macros/zlib.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(ndbtestdir)"
ndbtestPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(ndbtest_PROGRAMS)
am_copy_tab_OBJECTS = copy_tab.$(OBJEXT)
copy_tab_OBJECTS = $(am_copy_tab_OBJECTS)
copy_tab_LDADD = $(LDADD)
copy_tab_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_create_index_OBJECTS = create_index.$(OBJEXT)
create_index_OBJECTS = $(am_create_index_OBJECTS)
create_index_LDADD = $(LDADD)
create_index_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_eventlog_OBJECTS = log_listner.$(OBJEXT)
eventlog_OBJECTS = $(am_eventlog_OBJECTS)
eventlog_LDADD = $(LDADD)
eventlog_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoFill_OBJECTS = hugoFill.$(OBJEXT)
hugoFill_OBJECTS = $(am_hugoFill_OBJECTS)
hugoFill_LDADD = $(LDADD)
hugoFill_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoLoad_OBJECTS = hugoLoad.$(OBJEXT)
hugoLoad_OBJECTS = $(am_hugoLoad_OBJECTS)
hugoLoad_LDADD = $(LDADD)
hugoLoad_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoLockRecords_OBJECTS = hugoLockRecords.$(OBJEXT)
hugoLockRecords_OBJECTS = $(am_hugoLockRecords_OBJECTS)
hugoLockRecords_LDADD = $(LDADD)
hugoLockRecords_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoPkDelete_OBJECTS = hugoPkDelete.$(OBJEXT)
hugoPkDelete_OBJECTS = $(am_hugoPkDelete_OBJECTS)
hugoPkDelete_LDADD = $(LDADD)
hugoPkDelete_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoPkRead_OBJECTS = hugoPkRead.$(OBJEXT)
hugoPkRead_OBJECTS = $(am_hugoPkRead_OBJECTS)
hugoPkRead_LDADD = $(LDADD)
hugoPkRead_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoPkReadRecord_OBJECTS = hugoPkReadRecord.$(OBJEXT)
hugoPkReadRecord_OBJECTS = $(am_hugoPkReadRecord_OBJECTS)
hugoPkReadRecord_LDADD = $(LDADD)
hugoPkReadRecord_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoPkUpdate_OBJECTS = hugoPkUpdate.$(OBJEXT)
hugoPkUpdate_OBJECTS = $(am_hugoPkUpdate_OBJECTS)
hugoPkUpdate_LDADD = $(LDADD)
hugoPkUpdate_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoScanRead_OBJECTS = hugoScanRead.$(OBJEXT)
hugoScanRead_OBJECTS = $(am_hugoScanRead_OBJECTS)
hugoScanRead_LDADD = $(LDADD)
hugoScanRead_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_hugoScanUpdate_OBJECTS = hugoScanUpdate.$(OBJEXT)
hugoScanUpdate_OBJECTS = $(am_hugoScanUpdate_OBJECTS)
hugoScanUpdate_LDADD = $(LDADD)
hugoScanUpdate_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_listen_event_OBJECTS = listen.$(OBJEXT)
listen_event_OBJECTS = $(am_listen_event_OBJECTS)
listen_event_LDADD = $(LDADD)
listen_event_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_ndb_connect_OBJECTS = connect.$(OBJEXT)
ndb_connect_OBJECTS = $(am_ndb_connect_OBJECTS)
ndb_connect_LDADD = $(LDADD)
ndb_connect_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_ndb_cpcc_OBJECTS = cpcc.$(OBJEXT)
ndb_cpcc_OBJECTS = $(am_ndb_cpcc_OBJECTS)
am__DEPENDENCIES_1 = $(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
ndb_cpcc_DEPENDENCIES = $(am__DEPENDENCIES_1)
ndb_cpcc_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(ndb_cpcc_LDFLAGS) $(LDFLAGS) -o $@
am_rep_latency_OBJECTS = rep_latency.$(OBJEXT)
rep_latency_OBJECTS = $(am_rep_latency_OBJECTS)
rep_latency_LDADD = $(LDADD)
rep_latency_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_restart_OBJECTS = restart.$(OBJEXT)
restart_OBJECTS = $(am_restart_OBJECTS)
restart_LDADD = $(LDADD)
restart_DEPENDENCIES = $(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
am_verify_index_OBJECTS = verify_index.$(OBJEXT)
verify_index_OBJECTS = $(am_verify_index_OBJECTS)
verify_index_LDADD = $(LDADD)
verify_index_DEPENDENCIES =  \
	$(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(copy_tab_SOURCES) $(create_index_SOURCES) \
	$(eventlog_SOURCES) $(hugoFill_SOURCES) $(hugoLoad_SOURCES) \
	$(hugoLockRecords_SOURCES) $(hugoPkDelete_SOURCES) \
	$(hugoPkRead_SOURCES) $(hugoPkReadRecord_SOURCES) \
	$(hugoPkUpdate_SOURCES) $(hugoScanRead_SOURCES) \
	$(hugoScanUpdate_SOURCES) $(listen_event_SOURCES) \
	$(ndb_connect_SOURCES) $(ndb_cpcc_SOURCES) \
	$(rep_latency_SOURCES) $(restart_SOURCES) \
	$(verify_index_SOURCES)
DIST_SOURCES = $(copy_tab_SOURCES) $(create_index_SOURCES) \
	$(eventlog_SOURCES) $(hugoFill_SOURCES) $(hugoLoad_SOURCES) \
	$(hugoLockRecords_SOURCES) $(hugoPkDelete_SOURCES) \
	$(hugoPkRead_SOURCES) $(hugoPkReadRecord_SOURCES) \
	$(hugoPkUpdate_SOURCES) $(hugoScanRead_SOURCES) \
	$(hugoScanUpdate_SOURCES) $(listen_event_SOURCES) \
	$(ndb_connect_SOURCES) $(ndb_cpcc_SOURCES) \
	$(rep_latency_SOURCES) $(restart_SOURCES) \
	$(verify_index_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI_CHECK = abi_check
ACLOCAL = ${SHELL} /compilation/mysql-5.1.32/missing --run aclocal-1.10
ALLOCA = 
AMTAR = ${SHELL} /compilation/mysql-5.1.32/missing --run tar
AR = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-ar
ARFLAGS = cru
AS = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-gcc -c
ASFLAGS = 
AUTOCONF = ${SHELL} /compilation/mysql-5.1.32/missing --run autoconf
AUTOHEADER = ${SHELL} /compilation/mysql-5.1.32/missing --run autoheader
AUTOMAKE = ${SHELL} /compilation/mysql-5.1.32/missing --run automake-1.10
AVAILABLE_LANGUAGES = czech danish dutch english estonian french german greek hungarian italian japanese korean norwegian norwegian-ny polish portuguese romanian russian serbian slovak spanish swedish ukrainian
AWK = mawk
CC = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-gcc
CCAS = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = --sysroot=/compilation/arm-linux-androideabi-4.6/sysroot -I/androidserver/include -D_GNU_SOURCE    -Wa,--noexecstack
CCDEPMODE = depmode=gcc3
CC_VERSION = arm-linux-androideabi-gcc (GCC) 4.6 20120106 (prerelease)
CFLAGS =  --sysroot=/compilation/arm-linux-androideabi-4.6/sysroot -I/androidserver/include -D_GNU_SOURCE  
CHECK_PID = /bin/kill -0 $$PID > /dev/null 2> /dev/null
CHMOD = /bin/chmod
CLIENT_EXTRA_LDFLAGS = 
CLIENT_LIBS = -lm  -L/androidserver/lib/ -lssl -lcrypto -L/androidserver/lib -lz 
CLIENT_THREAD_LIBS = 
CMP = /usr/bin/cmp
COMPILATION_COMMENT = Source distribution
CONF_COMMAND = ./configure  '--prefix=/androidserver' '--target=arm' '--host=arm' '--disable-shared' '--enable-static' '--with-named-curses-libs=/androidserver/lib/libncurses.a' '--with-ssl=/androidserver' '--with--without-docs' '--without-man' '--disable-thread-safe-client' '--with-charset=utf8' '--with-extra-charsets=all' '--with-plugins=all' '--with-readline' '--with-zlib-dir=/androidserver' 'CFLAGS=--sysroot=/compilation/arm-linux-androideabi-4.6/sysroot -I/androidserver/include -D_GNU_SOURCE' 'CXXFLAGS=--sysroot=/compilation/arm-linux-androideabi-4.6/sysroot -I/androidserver/include -D_GNU_SOURCE' 'LDFLAGS=-L/androidserver/lib -lncurses -lz' 'ac_cv_sys_restartable_syscalls=yes' 'with_named_curses=yes' 'mysql_cv_termcap_lib=yes' 'ac_cv_func_getpwent=no' 'program_prefix=' 'host_alias=arm' 'target_alias=arm' 'CC=/compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-gcc' 'CXX=/compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-c++'
CP = /bin/cp
CPP = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-gcc -E
CPPFLAGS = 
CXX = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-c++
CXXCPP = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  --sysroot=/compilation/arm-linux-androideabi-4.6/sysroot -I/androidserver/include -D_GNU_SOURCE   -fno-implicit-templates -fno-exceptions -fno-rtti
CXXLDFLAGS = 
CXX_VERSION = arm-linux-androideabi-c++ (GCC) 4.6 20120106 (prerelease)
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H -DNDEBUG $(DEFS_LOC) $(NDB_EXTRA_FLAGS)
DEPDIR = .deps
DIFF = /usr/bin/diff
DOT_FRM_VERSION = 6
DOXYGEN = no
DVIS = manual.dvi
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
FIND_PROC = /bin/ps wwwp $$PID | grep -v " grep" | grep -v mysqld_safe | grep -- "$$MYSQLD" > /dev/null
GETCONF = getconf
GREP = /bin/grep
GXX = yes
HOSTNAME = /bin/hostname
INNODB_DYNAMIC_CFLAGS = -DMYSQL_DYNAMIC_PLUGIN
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KILL = /bin/kill
LD = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-ld
LDFLAGS = -L/androidserver/lib -lncurses -lz 
LD_VERSION_SCRIPT = -Wl,--version-script=$(top_builddir)/libmysql/libmysql.ver
LIBDL = -ldl 
LIBEDIT_LOBJECTS =  unvis.o vis.o
LIBOBJS = 
LIBS = -lm  
LIBTOOL = $(SHELL) $(top_builddir)/libtool --preserve-dup-deps
LIB_EXTRA_CCFLAGS = 
LM_CFLAGS = 
LN = /bin/ln
LN_CP_F = /bin/ln -s
LN_S = ln -s
LTLIBOBJS = 
MACHINE_TYPE = arm
MAKEINDEX = /usr/bin/makeindex
MAKEINFO = ${SHELL} /compilation/mysql-5.1.32/missing --run makeinfo
MAKE_BINARY_DISTRIBUTION_OPTIONS =  --with-ndbcluster
MAKE_SHELL = /bin/sh
MKDIR_P = /bin/mkdir -p
MV = /bin/mv
MYSQLD_DEFAULT_SWITCHES = 
MYSQLD_EXTRA_LDFLAGS = 
MYSQLD_EXTRA_LIBS = 
MYSQLD_USER = mysql
MYSQL_BASE_VERSION = 5.1
MYSQL_NO_DASH_VERSION = 5.1.32
MYSQL_PREVIOUS_BASE_VERSION = 5.0
MYSQL_SERVER_SUFFIX = 
MYSQL_TCP_PORT = 3306
MYSQL_TCP_PORT_DEFAULT = 0
MYSQL_UNIX_ADDR = /tmp/mysql.sock
MYSQL_VERSION_ID = 50132
NDB_DEFS = -DNDEBUG
NDB_LD_VERSION_SCRIPT = -Wl,--version-script=$(top_builddir)/storage/ndb/src/libndb.ver
NDB_SCI_INCLUDES = 
NDB_SCI_LIBS = 
NDB_SHARED_LIB_MAJOR_VERSION = 3
NDB_SHARED_LIB_VERSION = 3:0:0
NDB_SIZEOF_CHAR = 1
NDB_SIZEOF_CHARP = 4
NDB_SIZEOF_INT = 4
NDB_SIZEOF_LONG = 4
NDB_SIZEOF_LONG_LONG = 8
NDB_SIZEOF_SHORT = 2
NDB_VERSION_BUILD = 32
NDB_VERSION_MAJOR = 5
NDB_VERSION_MINOR = 1
NDB_VERSION_STATUS = 
NM = nm
NOINST_LDFLAGS = -static
NON_THREADED_LIBS = -lm 
OBJEXT = o
PACKAGE = mysql
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PDFLATEX = /usr/bin/pdflatex
PDFMANUAL = manual.pdf
PERL = /usr/bin/perl
PERL5 = /usr/bin/perl
PROTOCOL_VERSION = 10
PS = /bin/ps
RANLIB = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-ranlib
RM = /bin/rm
SAVE_ASFLAGS = 
SAVE_CC = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-gcc
SAVE_CFLAGS = --sysroot=/compilation/arm-linux-androideabi-4.6/sysroot -I/androidserver/include -D_GNU_SOURCE
SAVE_CXX = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-c++
SAVE_CXXFLAGS = --sysroot=/compilation/arm-linux-androideabi-4.6/sysroot -I/androidserver/include -D_GNU_SOURCE
SAVE_CXXLDFLAGS = 
SAVE_LDFLAGS = -L/androidserver/lib -lncurses -lz
SED = /bin/sed
SET_MAKE = 
SHARED_LIB_MAJOR_VERSION = 16
SHARED_LIB_VERSION = 16:0:0
SHELL = /bin/bash
STATIC_NSS_FLAGS = 
STRIP = /compilation/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-strip
SYSTEM_TYPE = unknown-none
TAR = tar
TARGET_LINUX = false
TERMCAP_LIB = /androidserver/lib/libncurses.a
TEST_NDBCLUSTER = --ndbcluster
THREAD_LOBJECTS = thr_alarm.o thr_lock.o thr_mutex.o thr_rwlock.o my_pthread.o my_thr_init.o mf_keycache.o
VERSION = 5.1.32
WRAPLIBS = 
YACC = bison -y -p MYSQL
ZLIB_DEPS = -L/androidserver/lib -lz
ZLIB_INCLUDES = -I/androidserver/include
ZLIB_LIBS = -L/androidserver/lib -lz
abs_builddir = /compilation/mysql-5.1.32/storage/ndb/test/tools
abs_srcdir = /compilation/mysql-5.1.32/storage/ndb/test/tools
abs_top_builddir = /compilation/mysql-5.1.32
abs_top_srcdir = /compilation/mysql-5.1.32
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
condition_dependent_plugin_includes =  -I$(top_srcdir)/storage/federated/ -I$(top_srcdir)/storage/heap/ -I$(top_srcdir)/storage/myisam/ -I$(top_srcdir)/storage/myisammrg/
condition_dependent_plugin_links =  storage/federated/ha_federated.cc storage/heap/ha_heap.cc storage/myisam/ha_myisam.cc storage/myisammrg/ha_myisammrg.cc
condition_dependent_plugin_modules =  ha_federated.cc ha_heap.cc ha_myisam.cc ha_myisammrg.cc
condition_dependent_plugin_objects =  ha_federated.o ha_heap.o ha_myisam.o ha_myisammrg.o
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
docs_dirs = Docs
dvidir = ${docdir}
exec_prefix = ${prefix}
extra_docs = manual.chm
host = arm-unknown-none
host_alias = arm
host_cpu = arm
host_os = none
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
innodb_system_libs = 
install_sh = $(SHELL) /compilation/mysql-5.1.32/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libmysqld_dirs = 
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
man1_files = 
man8_files = 
man_dirs = 
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
mysql_pg_dirs =  daemon_example fulltext
mysql_pg_unittest_dirs =  ../plugin/daemon_example ../plugin/fulltext
mysql_plugin_defs = , builtin_partition_plugin, builtin_archive_plugin, builtin_blackhole_plugin, builtin_csv_plugin, builtin_federated_plugin, builtin_heap_plugin, builtin_innobase_plugin, builtin_myisam_plugin, builtin_myisammrg_plugin, builtin_ndbcluster_plugin
mysql_plugin_dirs =  plugin/daemon_example plugin/fulltext storage/archive storage/blackhole storage/csv storage/example storage/federated storage/heap storage/innobase storage/myisam storage/myisammrg storage/ndb
mysql_plugin_libs =  $(top_builddir)/storage/archive/libarchive.a $(top_builddir)/storage/blackhole/libblackhole.a $(top_builddir)/storage/csv/libcsv.a $(top_builddir)/storage/federated/libfederated.a $(top_builddir)/storage/heap/libheap.a $(top_builddir)/storage/innobase/libinnobase.a $(top_builddir)/storage/myisam/libmyisam.a $(top_builddir)/storage/myisammrg/libmyisammrg.a $(ndbcluster_libs) $(ndbcluster_system_libs) $(NDB_SCI_LIBS)
mysql_se_dirs =  archive blackhole csv example federated heap innobase myisam myisammrg ndb
mysql_se_unittest_dirs =  ../storage/archive ../storage/blackhole ../storage/csv ../storage/example ../storage/federated ../storage/heap ../storage/innobase ../storage/myisam ../storage/myisammrg ../storage/ndb
ndb_bin_am_ldflags = -static
ndb_cxxflags_fix =  
ndb_mgmclient_libs = $(top_builddir)/storage/ndb/src/mgmclient/libndbmgmclient.la
ndb_opt_subdirs = 
ndb_port = 1186
ndb_transporter_opt_objs = 
ndbcluster_includes = -I$(top_builddir)/storage/ndb/include -I$(top_srcdir)/storage/ndb/include -I$(top_srcdir)/storage/ndb/include/ndbapi -I$(top_srcdir)/storage/ndb/include/mgmapi
ndbcluster_libs = $(top_builddir)/storage/ndb/src/.libs/libndbclient.a
ndbcluster_system_libs = 
netware_dir = 
oldincludedir = /usr/include
openssl_includes = -I/androidserver/include
openssl_libs = -L/androidserver/lib/ -lssl -lcrypto
pdfdir = ${docdir}
plugin_archive_shared_target = 
plugin_archive_static_target = libarchive.a
plugin_blackhole_shared_target = 
plugin_blackhole_static_target = libblackhole.a
plugin_csv_shared_target = 
plugin_csv_static_target = libcsv.a
plugin_daemon_example_shared_target = libdaemon_example.la
plugin_daemon_example_static_target = 
plugin_example_shared_target = ha_example.la
plugin_example_static_target = 
plugin_federated_shared_target = 
plugin_federated_static_target = libfederated.a
plugin_ftexample_shared_target = mypluglib.la
plugin_ftexample_static_target = 
plugin_heap_shared_target = 
plugin_heap_static_target = libheap.a
plugin_innobase_shared_target = 
plugin_innobase_static_target = libinnobase.a
plugin_myisam_shared_target = 
plugin_myisam_static_target = libmyisam.a
plugin_myisammrg_shared_target = 
plugin_myisammrg_static_target = libmyisammrg.a
plugin_ndbcluster_shared_target = 
plugin_ndbcluster_static_target = $(ndbcluster_libs) $(ndbcluster_system_libs) $(NDB_SCI_LIBS)
plugin_partition_shared_target = 
plugin_partition_static_target = yes
prefix = /androidserver
program_transform_name = s&^&&
psdir = ${docdir}
pstack_dir = 
pstack_libs = 
readline_basedir = readline
readline_dir = cmd-line-utils/readline
readline_h_ln_cmd = $(LN) -s $(top_srcdir)/cmd-line-utils/readline readline
readline_link = $(top_builddir)/cmd-line-utils/readline/libreadline.a
readline_topdir = cmd-line-utils
sbindir = ${exec_prefix}/sbin
server_scripts = mysqld_safe mysql_install_db
sharedstatedir = ${prefix}/com
sql_client_dirs = strings regex mysys libmysql client
sql_server = vio sql
sql_server_dirs = strings mysys dbug extra regex
sql_union_dirs =  strings mysys dbug extra regex  libmysql  client 
srcdir = .
sysconfdir = ${prefix}/etc
target = arm-unknown-none
target_alias = arm
target_cpu = arm
target_os = none
target_vendor = unknown
tools_dirs = server-tools
top_build_prefix = ../../../../
top_builddir = ../../../..
top_srcdir = ../../../..
uname_prog = /bin/uname
yassl_dir = 
yassl_h_ln_cmd = 
yassl_libs = 
yassl_taocrypt_extra_cxxflags = 
zlib_dir = 

# transproxy 
hugoFill_SOURCES = hugoFill.cpp
hugoLoad_SOURCES = hugoLoad.cpp
hugoLockRecords_SOURCES = hugoLockRecords.cpp
hugoPkDelete_SOURCES = hugoPkDelete.cpp
hugoPkRead_SOURCES = hugoPkRead.cpp
hugoPkReadRecord_SOURCES = hugoPkReadRecord.cpp
hugoPkUpdate_SOURCES = hugoPkUpdate.cpp
hugoScanRead_SOURCES = hugoScanRead.cpp
hugoScanUpdate_SOURCES = hugoScanUpdate.cpp
restart_SOURCES = restart.cpp
# transproxy_SOURCES = transproxy.cpp
verify_index_SOURCES = verify_index.cpp
copy_tab_SOURCES = copy_tab.cpp
create_index_SOURCES = create_index.cpp
ndb_cpcc_SOURCES = cpcc.cpp
listen_event_SOURCES = listen.cpp
eventlog_SOURCES = log_listner.cpp
rep_latency_SOURCES = rep_latency.cpp
ndb_connect_SOURCES = connect.cpp
ndbbindir = "$(libexecdir)"
ndbtoolsdir = "$(bindir)"
ndbtestdir = "$(bindir)"
ndblibdir = "$(pkglibdir)"
ndbincludedir = "$(pkgincludedir)/storage/ndb"
ndbapiincludedir = "$(pkgincludedir)/storage/ndb/ndbapi"
mgmapiincludedir = "$(pkgincludedir)/storage/ndb/mgmapi"
INCLUDES = $(INCLUDES_LOC) -I$(top_srcdir) -I$(top_builddir)/include \
	-I$(top_builddir)/storage/ndb/include -I$(top_srcdir)/include \
	-I$(top_srcdir)/storage/ndb/include \
	-I$(top_srcdir)/storage/ndb/include/ndbapi \
	-I$(top_srcdir)/storage/ndb/include/util \
	-I$(top_srcdir)/storage/ndb/include/portlib \
	-I$(top_srcdir)/storage/ndb/test/include \
	-I$(top_srcdir)/storage/ndb/include/mgmapi
LDADD = $(LDADD_LOC) $(top_builddir)/storage/ndb/test/src/libNDBT.a \
	$(top_builddir)/storage/ndb/src/libndbclient.la \
	$(top_builddir)/dbug/libdbug.a \
	$(top_builddir)/mysys/libmysys.a \
	$(top_builddir)/strings/libmystrings.a 
NDB_CXXFLAGS =   $(NDB_CXXFLAGS_LOC) 
NDB_AM_CXXFLAGS := $(AM_CXXFLAGS)
AM_CXXFLAGS = $(NDB_AM_CXXFLAGS) $(NDB_CXXFLAGS)
ndb_cpcc_LDADD = $(LDADD)
ndb_cpcc_LDFLAGS = -static
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/storage/ndb/config/common.mk.am $(top_srcdir)/storage/ndb/config/type_ndbapitest.mk.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  storage/ndb/test/tools/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  storage/ndb/test/tools/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-ndbtestPROGRAMS: $(ndbtest_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(ndbtestdir)" || $(MKDIR_P) "$(DESTDIR)$(ndbtestdir)"
	@list='$(ndbtest_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(ndbtestPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(ndbtestdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(ndbtestPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(ndbtestdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-ndbtestPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(ndbtest_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(ndbtestdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(ndbtestdir)/$$f"; \
	done

clean-ndbtestPROGRAMS:
	@list='$(ndbtest_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
copy_tab$(EXEEXT): $(copy_tab_OBJECTS) $(copy_tab_DEPENDENCIES) 
	@rm -f copy_tab$(EXEEXT)
	$(CXXLINK) $(copy_tab_OBJECTS) $(copy_tab_LDADD) $(LIBS)
create_index$(EXEEXT): $(create_index_OBJECTS) $(create_index_DEPENDENCIES) 
	@rm -f create_index$(EXEEXT)
	$(CXXLINK) $(create_index_OBJECTS) $(create_index_LDADD) $(LIBS)
eventlog$(EXEEXT): $(eventlog_OBJECTS) $(eventlog_DEPENDENCIES) 
	@rm -f eventlog$(EXEEXT)
	$(CXXLINK) $(eventlog_OBJECTS) $(eventlog_LDADD) $(LIBS)
hugoFill$(EXEEXT): $(hugoFill_OBJECTS) $(hugoFill_DEPENDENCIES) 
	@rm -f hugoFill$(EXEEXT)
	$(CXXLINK) $(hugoFill_OBJECTS) $(hugoFill_LDADD) $(LIBS)
hugoLoad$(EXEEXT): $(hugoLoad_OBJECTS) $(hugoLoad_DEPENDENCIES) 
	@rm -f hugoLoad$(EXEEXT)
	$(CXXLINK) $(hugoLoad_OBJECTS) $(hugoLoad_LDADD) $(LIBS)
hugoLockRecords$(EXEEXT): $(hugoLockRecords_OBJECTS) $(hugoLockRecords_DEPENDENCIES) 
	@rm -f hugoLockRecords$(EXEEXT)
	$(CXXLINK) $(hugoLockRecords_OBJECTS) $(hugoLockRecords_LDADD) $(LIBS)
hugoPkDelete$(EXEEXT): $(hugoPkDelete_OBJECTS) $(hugoPkDelete_DEPENDENCIES) 
	@rm -f hugoPkDelete$(EXEEXT)
	$(CXXLINK) $(hugoPkDelete_OBJECTS) $(hugoPkDelete_LDADD) $(LIBS)
hugoPkRead$(EXEEXT): $(hugoPkRead_OBJECTS) $(hugoPkRead_DEPENDENCIES) 
	@rm -f hugoPkRead$(EXEEXT)
	$(CXXLINK) $(hugoPkRead_OBJECTS) $(hugoPkRead_LDADD) $(LIBS)
hugoPkReadRecord$(EXEEXT): $(hugoPkReadRecord_OBJECTS) $(hugoPkReadRecord_DEPENDENCIES) 
	@rm -f hugoPkReadRecord$(EXEEXT)
	$(CXXLINK) $(hugoPkReadRecord_OBJECTS) $(hugoPkReadRecord_LDADD) $(LIBS)
hugoPkUpdate$(EXEEXT): $(hugoPkUpdate_OBJECTS) $(hugoPkUpdate_DEPENDENCIES) 
	@rm -f hugoPkUpdate$(EXEEXT)
	$(CXXLINK) $(hugoPkUpdate_OBJECTS) $(hugoPkUpdate_LDADD) $(LIBS)
hugoScanRead$(EXEEXT): $(hugoScanRead_OBJECTS) $(hugoScanRead_DEPENDENCIES) 
	@rm -f hugoScanRead$(EXEEXT)
	$(CXXLINK) $(hugoScanRead_OBJECTS) $(hugoScanRead_LDADD) $(LIBS)
hugoScanUpdate$(EXEEXT): $(hugoScanUpdate_OBJECTS) $(hugoScanUpdate_DEPENDENCIES) 
	@rm -f hugoScanUpdate$(EXEEXT)
	$(CXXLINK) $(hugoScanUpdate_OBJECTS) $(hugoScanUpdate_LDADD) $(LIBS)
listen_event$(EXEEXT): $(listen_event_OBJECTS) $(listen_event_DEPENDENCIES) 
	@rm -f listen_event$(EXEEXT)
	$(CXXLINK) $(listen_event_OBJECTS) $(listen_event_LDADD) $(LIBS)
ndb_connect$(EXEEXT): $(ndb_connect_OBJECTS) $(ndb_connect_DEPENDENCIES) 
	@rm -f ndb_connect$(EXEEXT)
	$(CXXLINK) $(ndb_connect_OBJECTS) $(ndb_connect_LDADD) $(LIBS)
ndb_cpcc$(EXEEXT): $(ndb_cpcc_OBJECTS) $(ndb_cpcc_DEPENDENCIES) 
	@rm -f ndb_cpcc$(EXEEXT)
	$(ndb_cpcc_LINK) $(ndb_cpcc_OBJECTS) $(ndb_cpcc_LDADD) $(LIBS)
rep_latency$(EXEEXT): $(rep_latency_OBJECTS) $(rep_latency_DEPENDENCIES) 
	@rm -f rep_latency$(EXEEXT)
	$(CXXLINK) $(rep_latency_OBJECTS) $(rep_latency_LDADD) $(LIBS)
restart$(EXEEXT): $(restart_OBJECTS) $(restart_DEPENDENCIES) 
	@rm -f restart$(EXEEXT)
	$(CXXLINK) $(restart_OBJECTS) $(restart_LDADD) $(LIBS)
verify_index$(EXEEXT): $(verify_index_OBJECTS) $(verify_index_DEPENDENCIES) 
	@rm -f verify_index$(EXEEXT)
	$(CXXLINK) $(verify_index_OBJECTS) $(verify_index_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/connect.Po
include ./$(DEPDIR)/copy_tab.Po
include ./$(DEPDIR)/cpcc.Po
include ./$(DEPDIR)/create_index.Po
include ./$(DEPDIR)/hugoFill.Po
include ./$(DEPDIR)/hugoLoad.Po
include ./$(DEPDIR)/hugoLockRecords.Po
include ./$(DEPDIR)/hugoPkDelete.Po
include ./$(DEPDIR)/hugoPkRead.Po
include ./$(DEPDIR)/hugoPkReadRecord.Po
include ./$(DEPDIR)/hugoPkUpdate.Po
include ./$(DEPDIR)/hugoScanRead.Po
include ./$(DEPDIR)/hugoScanUpdate.Po
include ./$(DEPDIR)/listen.Po
include ./$(DEPDIR)/log_listner.Po
include ./$(DEPDIR)/rep_latency.Po
include ./$(DEPDIR)/restart.Po
include ./$(DEPDIR)/verify_index.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(ndbtestdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-ndbtestPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-ndbtestPROGRAMS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-ndbtestPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-ndbtestPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-ndbtestPROGRAMS install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-ndbtestPROGRAMS


# Don't update the files from bitkeeper
%::SCCS/s.%

windoze-dsp:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
